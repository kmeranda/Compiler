Terminals unused in grammar

   NOT_TOKEN
   TOKEN_WHILE


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | /* empty */

    4 decl: ident TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
    5     | ident TOKEN_COLON type TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    8 type: TOKEN_STRING
    9     | TOKEN_INT
   10     | TOKEN_CHAR
   11     | TOKEN_BOOL
   12     | TOKEN_VOID
   13     | TOKEN_ARRAY TOKEN_BRACKET_OPEN expr_opt TOKEN_BRACKET_CLOSE type
   14     | TOKEN_FUNCT type TOKEN_PAREN_OPEN param_list TOKEN_PAREN_CLOSE

   15 param_list: /* empty */
   16           | not_empty_param_list

   17 not_empty_param_list: param
   18                     | param TOKEN_COMMA not_empty_param_list

   19 param: ident TOKEN_COLON type

   20 ident: TOKEN_IDENT

   21 stmt: stmt_matched
   22     | stmt_unmatched

   23 stmt_block: TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE

   24 stmt_matched: decl
   25             | expr TOKEN_SEMICOLON
   26             | TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   27             | stmt_block
   28             | TOKEN_RETURN expr_opt TOKEN_SEMICOLON
   29             | TOKEN_PRINT expr_list TOKEN_SEMICOLON
   30             | TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_matched

   31 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt
   32               | TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_unmatched
   33               | TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

   34 stmt_list: stmt stmt_list
   35          | /* empty */

   36 not_empty_expr_list: expr TOKEN_COMMA not_empty_expr_list
   37                    | expr

   38 not_empty_expr_list_block: expr_block TOKEN_COMMA not_empty_expr_list_block
   39                          | expr_block
   40                          | not_empty_expr_list

   41 expr_block: TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE

   42 expr_list: not_empty_expr_list
   43          | /* empty */

   44 expr_opt: /* empty */
   45         | expr

   46 expr: expr_or TOKEN_ASSIGN expr
   47     | expr_or

   48 expr_or: expr_or TOKEN_L_OR expr_and
   49        | expr_and

   50 expr_and: expr_and TOKEN_L_AND expr_cmp
   51         | expr_cmp

   52 expr_cmp: expr_cmp TOKEN_GT expr_add
   53         | expr_cmp TOKEN_GE expr_add
   54         | expr_cmp TOKEN_LT expr_add
   55         | expr_cmp TOKEN_LE expr_add
   56         | expr_cmp TOKEN_EQUAL expr_add
   57         | expr_cmp TOKEN_NE expr_add
   58         | expr_add

   59 expr_add: expr_add TOKEN_ADD expr_mult
   60         | expr_add TOKEN_SUBTRACT expr_mult
   61         | expr_mult

   62 expr_mult: expr_mult TOKEN_MULT expr_exp
   63          | expr_mult TOKEN_DIVIDE expr_exp
   64          | expr_mult TOKEN_MOD expr_exp
   65          | expr_exp

   66 expr_exp: expr_exp TOKEN_EXP expr_unary
   67         | expr_unary

   68 expr_unary: TOKEN_SUBTRACT expr_unary
   69           | TOKEN_NEGATION expr_unary
   70           | expr_incr

   71 expr_incr: expr_group TOKEN_INCREMENT
   72          | expr_group TOKEN_DECREMENT
   73          | expr_group

   74 expr_group: TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE
   75           | ident TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list
   76           | ident TOKEN_PAREN_OPEN expr_list TOKEN_PAREN_CLOSE
   77           | expr_primary

   78 expr_array_list: TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list
   79                | /* empty */

   80 expr_primary: ident
   81             | TOKEN_INT_LITERAL
   82             | TOKEN_STRING_LITERAL
   83             | TOKEN_CHAR_LITERAL
   84             | TOKEN_TRUE
   85             | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
NOT_TOKEN (258)
TOKEN_ARRAY (259) 13
TOKEN_BOOL (260) 11
TOKEN_CHAR (261) 10
TOKEN_CHAR_LITERAL (262) 83
TOKEN_ELSE (263) 30 32
TOKEN_FALSE (264) 85
TOKEN_FOR (265) 26 33
TOKEN_FUNCT (266) 14
TOKEN_IF (267) 30 31 32
TOKEN_IDENT (268) 20
TOKEN_INT (269) 9
TOKEN_INT_LITERAL (270) 81
TOKEN_PRINT (271) 29
TOKEN_RETURN (272) 28
TOKEN_STRING (273) 8
TOKEN_STRING_LITERAL (274) 82
TOKEN_TRUE (275) 84
TOKEN_VOID (276) 12
TOKEN_WHILE (277)
TOKEN_PAREN_OPEN (278) 14 26 30 31 32 33 74 76
TOKEN_PAREN_CLOSE (279) 14 26 30 31 32 33 74 76
TOKEN_BRACKET_OPEN (280) 13 75 78
TOKEN_BRACKET_CLOSE (281) 13 75 78
TOKEN_BRACE_OPEN (282) 6 7 23 41
TOKEN_BRACE_CLOSE (283) 6 7 23 41
TOKEN_COMMA (284) 18 36 38
TOKEN_SEMICOLON (285) 4 5 7 25 26 28 29 33
TOKEN_COLON (286) 4 5 6 7 19
TOKEN_INCREMENT (287) 71
TOKEN_DECREMENT (288) 72
TOKEN_NEGATION (289) 69
TOKEN_EXP (290) 66
TOKEN_MULT (291) 62
TOKEN_DIVIDE (292) 63
TOKEN_MOD (293) 64
TOKEN_ADD (294) 59
TOKEN_SUBTRACT (295) 60 68
TOKEN_LT (296) 54
TOKEN_LE (297) 55
TOKEN_GT (298) 52
TOKEN_GE (299) 53
TOKEN_EQUAL (300) 56
TOKEN_NE (301) 57
TOKEN_L_AND (302) 50
TOKEN_L_OR (303) 48
TOKEN_ASSIGN (304) 4 6 7 46


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
decl_list (52)
    on left: 2 3, on right: 1 2
decl (53)
    on left: 4 5 6 7, on right: 2 24
type (54)
    on left: 8 9 10 11 12 13 14, on right: 4 5 6 7 13 14 19
param_list (55)
    on left: 15 16, on right: 14
not_empty_param_list (56)
    on left: 17 18, on right: 16 18
param (57)
    on left: 19, on right: 17 18
ident (58)
    on left: 20, on right: 4 5 6 7 19 75 76 80
stmt (59)
    on left: 21 22, on right: 31 34
stmt_block (60)
    on left: 23, on right: 27
stmt_matched (61)
    on left: 24 25 26 27 28 29 30, on right: 21 26 30 32
stmt_unmatched (62)
    on left: 31 32 33, on right: 22 32 33
stmt_list (63)
    on left: 34 35, on right: 6 23 34
not_empty_expr_list (64)
    on left: 36 37, on right: 36 40 42
not_empty_expr_list_block (65)
    on left: 38 39 40, on right: 7 38 41
expr_block (66)
    on left: 41, on right: 38 39
expr_list (67)
    on left: 42 43, on right: 29 76
expr_opt (68)
    on left: 44 45, on right: 13 26 28 33
expr (69)
    on left: 46 47, on right: 4 25 30 31 32 36 37 45 46 74 75 78
expr_or (70)
    on left: 48 49, on right: 46 47 48
expr_and (71)
    on left: 50 51, on right: 48 49 50
expr_cmp (72)
    on left: 52 53 54 55 56 57 58, on right: 50 51 52 53 54 55 56 57
expr_add (73)
    on left: 59 60 61, on right: 52 53 54 55 56 57 58 59 60
expr_mult (74)
    on left: 62 63 64 65, on right: 59 60 61 62 63 64
expr_exp (75)
    on left: 66 67, on right: 62 63 64 65 66
expr_unary (76)
    on left: 68 69 70, on right: 66 67 68 69
expr_incr (77)
    on left: 71 72 73, on right: 70
expr_group (78)
    on left: 74 75 76 77, on right: 71 72 73
expr_array_list (79)
    on left: 78 79, on right: 75 78
expr_primary (80)
    on left: 80 81 82 83 84 85, on right: 77


state 0

    0 $accept: . program $end

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    ident      go to state 5


state 1

   20 ident: TOKEN_IDENT .

    $default  reduce using rule 20 (ident)


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: decl_list .

    $default  reduce using rule 1 (program)


state 4

    2 decl_list: decl . decl_list

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 7
    decl       go to state 4
    ident      go to state 5


state 5

    4 decl: ident . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
    5     | ident . TOKEN_COLON type TOKEN_SEMICOLON
    6     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


state 8

    4 decl: ident TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
    5     | ident TOKEN_COLON . type TOKEN_SEMICOLON
    6     | ident TOKEN_COLON . type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident TOKEN_COLON . type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 9
    TOKEN_BOOL    shift, and go to state 10
    TOKEN_CHAR    shift, and go to state 11
    TOKEN_FUNCT   shift, and go to state 12
    TOKEN_INT     shift, and go to state 13
    TOKEN_STRING  shift, and go to state 14
    TOKEN_VOID    shift, and go to state 15

    type  go to state 16


state 9

   13 type: TOKEN_ARRAY . TOKEN_BRACKET_OPEN expr_opt TOKEN_BRACKET_CLOSE type

    TOKEN_BRACKET_OPEN  shift, and go to state 17


state 10

   11 type: TOKEN_BOOL .

    $default  reduce using rule 11 (type)


state 11

   10 type: TOKEN_CHAR .

    $default  reduce using rule 10 (type)


state 12

   14 type: TOKEN_FUNCT . type TOKEN_PAREN_OPEN param_list TOKEN_PAREN_CLOSE

    TOKEN_ARRAY   shift, and go to state 9
    TOKEN_BOOL    shift, and go to state 10
    TOKEN_CHAR    shift, and go to state 11
    TOKEN_FUNCT   shift, and go to state 12
    TOKEN_INT     shift, and go to state 13
    TOKEN_STRING  shift, and go to state 14
    TOKEN_VOID    shift, and go to state 15

    type  go to state 18


state 13

    9 type: TOKEN_INT .

    $default  reduce using rule 9 (type)


state 14

    8 type: TOKEN_STRING .

    $default  reduce using rule 8 (type)


state 15

   12 type: TOKEN_VOID .

    $default  reduce using rule 12 (type)


state 16

    4 decl: ident TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
    5     | ident TOKEN_COLON type . TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type . TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident TOKEN_COLON type . TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 19
    TOKEN_ASSIGN     shift, and go to state 20


state 17

   13 type: TOKEN_ARRAY TOKEN_BRACKET_OPEN . expr_opt TOKEN_BRACKET_CLOSE type

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 44 (expr_opt)

    ident         go to state 29
    expr_opt      go to state 30
    expr          go to state 31
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 18

   14 type: TOKEN_FUNCT type . TOKEN_PAREN_OPEN param_list TOKEN_PAREN_CLOSE

    TOKEN_PAREN_OPEN  shift, and go to state 42


state 19

    5 decl: ident TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 5 (decl)


state 20

    4 decl: ident TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type TOKEN_ASSIGN . TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident TOKEN_COLON type TOKEN_ASSIGN . TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 43
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 44
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 21

   83 expr_primary: TOKEN_CHAR_LITERAL .

    $default  reduce using rule 83 (expr_primary)


state 22

   85 expr_primary: TOKEN_FALSE .

    $default  reduce using rule 85 (expr_primary)


state 23

   81 expr_primary: TOKEN_INT_LITERAL .

    $default  reduce using rule 81 (expr_primary)


state 24

   82 expr_primary: TOKEN_STRING_LITERAL .

    $default  reduce using rule 82 (expr_primary)


state 25

   84 expr_primary: TOKEN_TRUE .

    $default  reduce using rule 84 (expr_primary)


state 26

   74 expr_group: TOKEN_PAREN_OPEN . expr TOKEN_PAREN_CLOSE

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 45
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 27

   69 expr_unary: TOKEN_NEGATION . expr_unary

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_unary    go to state 46
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 28

   68 expr_unary: TOKEN_SUBTRACT . expr_unary

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_unary    go to state 47
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 29

   75 expr_group: ident . TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list
   76           | ident . TOKEN_PAREN_OPEN expr_list TOKEN_PAREN_CLOSE
   80 expr_primary: ident .

    TOKEN_PAREN_OPEN    shift, and go to state 48
    TOKEN_BRACKET_OPEN  shift, and go to state 49

    $default  reduce using rule 80 (expr_primary)


state 30

   13 type: TOKEN_ARRAY TOKEN_BRACKET_OPEN expr_opt . TOKEN_BRACKET_CLOSE type

    TOKEN_BRACKET_CLOSE  shift, and go to state 50


state 31

   45 expr_opt: expr .

    $default  reduce using rule 45 (expr_opt)


state 32

   46 expr: expr_or . TOKEN_ASSIGN expr
   47     | expr_or .
   48 expr_or: expr_or . TOKEN_L_OR expr_and

    TOKEN_L_OR    shift, and go to state 51
    TOKEN_ASSIGN  shift, and go to state 52

    $default  reduce using rule 47 (expr)


state 33

   49 expr_or: expr_and .
   50 expr_and: expr_and . TOKEN_L_AND expr_cmp

    TOKEN_L_AND  shift, and go to state 53

    $default  reduce using rule 49 (expr_or)


state 34

   51 expr_and: expr_cmp .
   52 expr_cmp: expr_cmp . TOKEN_GT expr_add
   53         | expr_cmp . TOKEN_GE expr_add
   54         | expr_cmp . TOKEN_LT expr_add
   55         | expr_cmp . TOKEN_LE expr_add
   56         | expr_cmp . TOKEN_EQUAL expr_add
   57         | expr_cmp . TOKEN_NE expr_add

    TOKEN_LT     shift, and go to state 54
    TOKEN_LE     shift, and go to state 55
    TOKEN_GT     shift, and go to state 56
    TOKEN_GE     shift, and go to state 57
    TOKEN_EQUAL  shift, and go to state 58
    TOKEN_NE     shift, and go to state 59

    $default  reduce using rule 51 (expr_and)


state 35

   58 expr_cmp: expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 58 (expr_cmp)


state 36

   61 expr_add: expr_mult .
   62 expr_mult: expr_mult . TOKEN_MULT expr_exp
   63          | expr_mult . TOKEN_DIVIDE expr_exp
   64          | expr_mult . TOKEN_MOD expr_exp

    TOKEN_MULT    shift, and go to state 62
    TOKEN_DIVIDE  shift, and go to state 63
    TOKEN_MOD     shift, and go to state 64

    $default  reduce using rule 61 (expr_add)


state 37

   65 expr_mult: expr_exp .
   66 expr_exp: expr_exp . TOKEN_EXP expr_unary

    TOKEN_EXP  shift, and go to state 65

    $default  reduce using rule 65 (expr_mult)


state 38

   67 expr_exp: expr_unary .

    $default  reduce using rule 67 (expr_exp)


state 39

   70 expr_unary: expr_incr .

    $default  reduce using rule 70 (expr_unary)


state 40

   71 expr_incr: expr_group . TOKEN_INCREMENT
   72          | expr_group . TOKEN_DECREMENT
   73          | expr_group .

    TOKEN_INCREMENT  shift, and go to state 66
    TOKEN_DECREMENT  shift, and go to state 67

    $default  reduce using rule 73 (expr_incr)


state 41

   77 expr_group: expr_primary .

    $default  reduce using rule 77 (expr_group)


state 42

   14 type: TOKEN_FUNCT type TOKEN_PAREN_OPEN . param_list TOKEN_PAREN_CLOSE

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 15 (param_list)

    param_list            go to state 68
    not_empty_param_list  go to state 69
    param                 go to state 70
    ident                 go to state 71


state 43

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN . stmt_list TOKEN_BRACE_CLOSE
    7     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN . not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 76
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 35 (stmt_list)

    decl                       go to state 77
    ident                      go to state 78
    stmt                       go to state 79
    stmt_block                 go to state 80
    stmt_matched               go to state 81
    stmt_unmatched             go to state 82
    stmt_list                  go to state 83
    not_empty_expr_list        go to state 84
    not_empty_expr_list_block  go to state 85
    expr_block                 go to state 86
    expr                       go to state 87
    expr_or                    go to state 32
    expr_and                   go to state 33
    expr_cmp                   go to state 34
    expr_add                   go to state 35
    expr_mult                  go to state 36
    expr_exp                   go to state 37
    expr_unary                 go to state 38
    expr_incr                  go to state 39
    expr_group                 go to state 40
    expr_primary               go to state 41


state 44

    4 decl: ident TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 88


state 45

   74 expr_group: TOKEN_PAREN_OPEN expr . TOKEN_PAREN_CLOSE

    TOKEN_PAREN_CLOSE  shift, and go to state 89


state 46

   69 expr_unary: TOKEN_NEGATION expr_unary .

    $default  reduce using rule 69 (expr_unary)


state 47

   68 expr_unary: TOKEN_SUBTRACT expr_unary .

    $default  reduce using rule 68 (expr_unary)


state 48

   76 expr_group: ident TOKEN_PAREN_OPEN . expr_list TOKEN_PAREN_CLOSE

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 43 (expr_list)

    ident                go to state 29
    not_empty_expr_list  go to state 90
    expr_list            go to state 91
    expr                 go to state 92
    expr_or              go to state 32
    expr_and             go to state 33
    expr_cmp             go to state 34
    expr_add             go to state 35
    expr_mult            go to state 36
    expr_exp             go to state 37
    expr_unary           go to state 38
    expr_incr            go to state 39
    expr_group           go to state 40
    expr_primary         go to state 41


state 49

   75 expr_group: ident TOKEN_BRACKET_OPEN . expr TOKEN_BRACKET_CLOSE expr_array_list

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 93
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 50

   13 type: TOKEN_ARRAY TOKEN_BRACKET_OPEN expr_opt TOKEN_BRACKET_CLOSE . type

    TOKEN_ARRAY   shift, and go to state 9
    TOKEN_BOOL    shift, and go to state 10
    TOKEN_CHAR    shift, and go to state 11
    TOKEN_FUNCT   shift, and go to state 12
    TOKEN_INT     shift, and go to state 13
    TOKEN_STRING  shift, and go to state 14
    TOKEN_VOID    shift, and go to state 15

    type  go to state 94


state 51

   48 expr_or: expr_or TOKEN_L_OR . expr_and

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_and      go to state 95
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 52

   46 expr: expr_or TOKEN_ASSIGN . expr

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 96
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 53

   50 expr_and: expr_and TOKEN_L_AND . expr_cmp

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_cmp      go to state 97
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 54

   54 expr_cmp: expr_cmp TOKEN_LT . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 98
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 55

   55 expr_cmp: expr_cmp TOKEN_LE . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 99
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 56

   52 expr_cmp: expr_cmp TOKEN_GT . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 100
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 57

   53 expr_cmp: expr_cmp TOKEN_GE . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 101
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 58

   56 expr_cmp: expr_cmp TOKEN_EQUAL . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 102
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 59

   57 expr_cmp: expr_cmp TOKEN_NE . expr_add

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_add      go to state 103
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 60

   59 expr_add: expr_add TOKEN_ADD . expr_mult

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_mult     go to state 104
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 61

   60 expr_add: expr_add TOKEN_SUBTRACT . expr_mult

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_mult     go to state 105
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 62

   62 expr_mult: expr_mult TOKEN_MULT . expr_exp

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_exp      go to state 106
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 63

   63 expr_mult: expr_mult TOKEN_DIVIDE . expr_exp

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_exp      go to state 107
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 64

   64 expr_mult: expr_mult TOKEN_MOD . expr_exp

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_exp      go to state 108
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 65

   66 expr_exp: expr_exp TOKEN_EXP . expr_unary

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr_unary    go to state 109
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 66

   71 expr_incr: expr_group TOKEN_INCREMENT .

    $default  reduce using rule 71 (expr_incr)


state 67

   72 expr_incr: expr_group TOKEN_DECREMENT .

    $default  reduce using rule 72 (expr_incr)


state 68

   14 type: TOKEN_FUNCT type TOKEN_PAREN_OPEN param_list . TOKEN_PAREN_CLOSE

    TOKEN_PAREN_CLOSE  shift, and go to state 110


state 69

   16 param_list: not_empty_param_list .

    $default  reduce using rule 16 (param_list)


state 70

   17 not_empty_param_list: param .
   18                     | param . TOKEN_COMMA not_empty_param_list

    TOKEN_COMMA  shift, and go to state 111

    $default  reduce using rule 17 (not_empty_param_list)


state 71

   19 param: ident . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 112


state 72

   26 stmt_matched: TOKEN_FOR . TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR . TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_PAREN_OPEN  shift, and go to state 113


state 73

   30 stmt_matched: TOKEN_IF . TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_matched
   31 stmt_unmatched: TOKEN_IF . TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt
   32               | TOKEN_IF . TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_unmatched

    TOKEN_PAREN_OPEN  shift, and go to state 114


state 74

   29 stmt_matched: TOKEN_PRINT . expr_list TOKEN_SEMICOLON

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 43 (expr_list)

    ident                go to state 29
    not_empty_expr_list  go to state 90
    expr_list            go to state 115
    expr                 go to state 92
    expr_or              go to state 32
    expr_and             go to state 33
    expr_cmp             go to state 34
    expr_add             go to state 35
    expr_mult            go to state 36
    expr_exp             go to state 37
    expr_unary           go to state 38
    expr_incr            go to state 39
    expr_group           go to state 40
    expr_primary         go to state 41


state 75

   28 stmt_matched: TOKEN_RETURN . expr_opt TOKEN_SEMICOLON

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 44 (expr_opt)

    ident         go to state 29
    expr_opt      go to state 116
    expr          go to state 31
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 76

   23 stmt_block: TOKEN_BRACE_OPEN . stmt_list TOKEN_BRACE_CLOSE
   41 expr_block: TOKEN_BRACE_OPEN . not_empty_expr_list_block TOKEN_BRACE_CLOSE

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 76
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 35 (stmt_list)

    decl                       go to state 77
    ident                      go to state 78
    stmt                       go to state 79
    stmt_block                 go to state 80
    stmt_matched               go to state 81
    stmt_unmatched             go to state 82
    stmt_list                  go to state 117
    not_empty_expr_list        go to state 84
    not_empty_expr_list_block  go to state 118
    expr_block                 go to state 86
    expr                       go to state 87
    expr_or                    go to state 32
    expr_and                   go to state 33
    expr_cmp                   go to state 34
    expr_add                   go to state 35
    expr_mult                  go to state 36
    expr_exp                   go to state 37
    expr_unary                 go to state 38
    expr_incr                  go to state 39
    expr_group                 go to state 40
    expr_primary               go to state 41


state 77

   24 stmt_matched: decl .

    $default  reduce using rule 24 (stmt_matched)


state 78

    4 decl: ident . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
    5     | ident . TOKEN_COLON type TOKEN_SEMICOLON
    6     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE
    7     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON
   75 expr_group: ident . TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list
   76           | ident . TOKEN_PAREN_OPEN expr_list TOKEN_PAREN_CLOSE
   80 expr_primary: ident .

    TOKEN_PAREN_OPEN    shift, and go to state 48
    TOKEN_BRACKET_OPEN  shift, and go to state 49
    TOKEN_COLON         shift, and go to state 8

    $default  reduce using rule 80 (expr_primary)


state 79

   34 stmt_list: stmt . stmt_list

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 119
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 35 (stmt_list)

    decl            go to state 77
    ident           go to state 78
    stmt            go to state 79
    stmt_block      go to state 80
    stmt_matched    go to state 81
    stmt_unmatched  go to state 82
    stmt_list       go to state 120
    expr            go to state 121
    expr_or         go to state 32
    expr_and        go to state 33
    expr_cmp        go to state 34
    expr_add        go to state 35
    expr_mult       go to state 36
    expr_exp        go to state 37
    expr_unary      go to state 38
    expr_incr       go to state 39
    expr_group      go to state 40
    expr_primary    go to state 41


state 80

   27 stmt_matched: stmt_block .

    $default  reduce using rule 27 (stmt_matched)


state 81

   21 stmt: stmt_matched .

    $default  reduce using rule 21 (stmt)


state 82

   22 stmt: stmt_unmatched .

    $default  reduce using rule 22 (stmt)


state 83

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list . TOKEN_BRACE_CLOSE

    TOKEN_BRACE_CLOSE  shift, and go to state 122


state 84

   40 not_empty_expr_list_block: not_empty_expr_list .

    $default  reduce using rule 40 (not_empty_expr_list_block)


state 85

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block . TOKEN_BRACE_CLOSE TOKEN_SEMICOLON

    TOKEN_BRACE_CLOSE  shift, and go to state 123


state 86

   38 not_empty_expr_list_block: expr_block . TOKEN_COMMA not_empty_expr_list_block
   39                          | expr_block .

    TOKEN_COMMA  shift, and go to state 124

    $default  reduce using rule 39 (not_empty_expr_list_block)


state 87

   25 stmt_matched: expr . TOKEN_SEMICOLON
   36 not_empty_expr_list: expr . TOKEN_COMMA not_empty_expr_list
   37                    | expr .

    TOKEN_COMMA      shift, and go to state 125
    TOKEN_SEMICOLON  shift, and go to state 126

    $default  reduce using rule 37 (not_empty_expr_list)


state 88

    4 decl: ident TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 4 (decl)


state 89

   74 expr_group: TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE .

    $default  reduce using rule 74 (expr_group)


state 90

   42 expr_list: not_empty_expr_list .

    $default  reduce using rule 42 (expr_list)


state 91

   76 expr_group: ident TOKEN_PAREN_OPEN expr_list . TOKEN_PAREN_CLOSE

    TOKEN_PAREN_CLOSE  shift, and go to state 127


state 92

   36 not_empty_expr_list: expr . TOKEN_COMMA not_empty_expr_list
   37                    | expr .

    TOKEN_COMMA  shift, and go to state 125

    $default  reduce using rule 37 (not_empty_expr_list)


state 93

   75 expr_group: ident TOKEN_BRACKET_OPEN expr . TOKEN_BRACKET_CLOSE expr_array_list

    TOKEN_BRACKET_CLOSE  shift, and go to state 128


state 94

   13 type: TOKEN_ARRAY TOKEN_BRACKET_OPEN expr_opt TOKEN_BRACKET_CLOSE type .

    $default  reduce using rule 13 (type)


state 95

   48 expr_or: expr_or TOKEN_L_OR expr_and .
   50 expr_and: expr_and . TOKEN_L_AND expr_cmp

    TOKEN_L_AND  shift, and go to state 53

    $default  reduce using rule 48 (expr_or)


state 96

   46 expr: expr_or TOKEN_ASSIGN expr .

    $default  reduce using rule 46 (expr)


state 97

   50 expr_and: expr_and TOKEN_L_AND expr_cmp .
   52 expr_cmp: expr_cmp . TOKEN_GT expr_add
   53         | expr_cmp . TOKEN_GE expr_add
   54         | expr_cmp . TOKEN_LT expr_add
   55         | expr_cmp . TOKEN_LE expr_add
   56         | expr_cmp . TOKEN_EQUAL expr_add
   57         | expr_cmp . TOKEN_NE expr_add

    TOKEN_LT     shift, and go to state 54
    TOKEN_LE     shift, and go to state 55
    TOKEN_GT     shift, and go to state 56
    TOKEN_GE     shift, and go to state 57
    TOKEN_EQUAL  shift, and go to state 58
    TOKEN_NE     shift, and go to state 59

    $default  reduce using rule 50 (expr_and)


state 98

   54 expr_cmp: expr_cmp TOKEN_LT expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 54 (expr_cmp)


state 99

   55 expr_cmp: expr_cmp TOKEN_LE expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 55 (expr_cmp)


state 100

   52 expr_cmp: expr_cmp TOKEN_GT expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 52 (expr_cmp)


state 101

   53 expr_cmp: expr_cmp TOKEN_GE expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 53 (expr_cmp)


state 102

   56 expr_cmp: expr_cmp TOKEN_EQUAL expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 56 (expr_cmp)


state 103

   57 expr_cmp: expr_cmp TOKEN_NE expr_add .
   59 expr_add: expr_add . TOKEN_ADD expr_mult
   60         | expr_add . TOKEN_SUBTRACT expr_mult

    TOKEN_ADD       shift, and go to state 60
    TOKEN_SUBTRACT  shift, and go to state 61

    $default  reduce using rule 57 (expr_cmp)


state 104

   59 expr_add: expr_add TOKEN_ADD expr_mult .
   62 expr_mult: expr_mult . TOKEN_MULT expr_exp
   63          | expr_mult . TOKEN_DIVIDE expr_exp
   64          | expr_mult . TOKEN_MOD expr_exp

    TOKEN_MULT    shift, and go to state 62
    TOKEN_DIVIDE  shift, and go to state 63
    TOKEN_MOD     shift, and go to state 64

    $default  reduce using rule 59 (expr_add)


state 105

   60 expr_add: expr_add TOKEN_SUBTRACT expr_mult .
   62 expr_mult: expr_mult . TOKEN_MULT expr_exp
   63          | expr_mult . TOKEN_DIVIDE expr_exp
   64          | expr_mult . TOKEN_MOD expr_exp

    TOKEN_MULT    shift, and go to state 62
    TOKEN_DIVIDE  shift, and go to state 63
    TOKEN_MOD     shift, and go to state 64

    $default  reduce using rule 60 (expr_add)


state 106

   62 expr_mult: expr_mult TOKEN_MULT expr_exp .
   66 expr_exp: expr_exp . TOKEN_EXP expr_unary

    TOKEN_EXP  shift, and go to state 65

    $default  reduce using rule 62 (expr_mult)


state 107

   63 expr_mult: expr_mult TOKEN_DIVIDE expr_exp .
   66 expr_exp: expr_exp . TOKEN_EXP expr_unary

    TOKEN_EXP  shift, and go to state 65

    $default  reduce using rule 63 (expr_mult)


state 108

   64 expr_mult: expr_mult TOKEN_MOD expr_exp .
   66 expr_exp: expr_exp . TOKEN_EXP expr_unary

    TOKEN_EXP  shift, and go to state 65

    $default  reduce using rule 64 (expr_mult)


state 109

   66 expr_exp: expr_exp TOKEN_EXP expr_unary .

    $default  reduce using rule 66 (expr_exp)


state 110

   14 type: TOKEN_FUNCT type TOKEN_PAREN_OPEN param_list TOKEN_PAREN_CLOSE .

    $default  reduce using rule 14 (type)


state 111

   18 not_empty_param_list: param TOKEN_COMMA . not_empty_param_list

    TOKEN_IDENT  shift, and go to state 1

    not_empty_param_list  go to state 129
    param                 go to state 70
    ident                 go to state 71


state 112

   19 param: ident TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 9
    TOKEN_BOOL    shift, and go to state 10
    TOKEN_CHAR    shift, and go to state 11
    TOKEN_FUNCT   shift, and go to state 12
    TOKEN_INT     shift, and go to state 13
    TOKEN_STRING  shift, and go to state 14
    TOKEN_VOID    shift, and go to state 15

    type  go to state 130


state 113

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN . expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN . expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 44 (expr_opt)

    ident         go to state 29
    expr_opt      go to state 131
    expr          go to state 31
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 114

   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN . expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_matched
   31 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN . expr TOKEN_PAREN_CLOSE stmt
   32               | TOKEN_IF TOKEN_PAREN_OPEN . expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 132
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 115

   29 stmt_matched: TOKEN_PRINT expr_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 133


state 116

   28 stmt_matched: TOKEN_RETURN expr_opt . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 134


state 117

   23 stmt_block: TOKEN_BRACE_OPEN stmt_list . TOKEN_BRACE_CLOSE

    TOKEN_BRACE_CLOSE  shift, and go to state 135


state 118

   41 expr_block: TOKEN_BRACE_OPEN not_empty_expr_list_block . TOKEN_BRACE_CLOSE

    TOKEN_BRACE_CLOSE  shift, and go to state 136


state 119

   23 stmt_block: TOKEN_BRACE_OPEN . stmt_list TOKEN_BRACE_CLOSE

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 119
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 35 (stmt_list)

    decl            go to state 77
    ident           go to state 78
    stmt            go to state 79
    stmt_block      go to state 80
    stmt_matched    go to state 81
    stmt_unmatched  go to state 82
    stmt_list       go to state 117
    expr            go to state 121
    expr_or         go to state 32
    expr_and        go to state 33
    expr_cmp        go to state 34
    expr_add        go to state 35
    expr_mult       go to state 36
    expr_exp        go to state 37
    expr_unary      go to state 38
    expr_incr       go to state 39
    expr_group      go to state 40
    expr_primary    go to state 41


state 120

   34 stmt_list: stmt stmt_list .

    $default  reduce using rule 34 (stmt_list)


state 121

   25 stmt_matched: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 126


state 122

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE .

    $default  reduce using rule 6 (decl)


state 123

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 137


state 124

   38 not_empty_expr_list_block: expr_block TOKEN_COMMA . not_empty_expr_list_block

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 138
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident                      go to state 29
    not_empty_expr_list        go to state 84
    not_empty_expr_list_block  go to state 139
    expr_block                 go to state 86
    expr                       go to state 92
    expr_or                    go to state 32
    expr_and                   go to state 33
    expr_cmp                   go to state 34
    expr_add                   go to state 35
    expr_mult                  go to state 36
    expr_exp                   go to state 37
    expr_unary                 go to state 38
    expr_incr                  go to state 39
    expr_group                 go to state 40
    expr_primary               go to state 41


state 125

   36 not_empty_expr_list: expr TOKEN_COMMA . not_empty_expr_list

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident                go to state 29
    not_empty_expr_list  go to state 140
    expr                 go to state 92
    expr_or              go to state 32
    expr_and             go to state 33
    expr_cmp             go to state 34
    expr_add             go to state 35
    expr_mult            go to state 36
    expr_exp             go to state 37
    expr_unary           go to state 38
    expr_incr            go to state 39
    expr_group           go to state 40
    expr_primary         go to state 41


state 126

   25 stmt_matched: expr TOKEN_SEMICOLON .

    $default  reduce using rule 25 (stmt_matched)


state 127

   76 expr_group: ident TOKEN_PAREN_OPEN expr_list TOKEN_PAREN_CLOSE .

    $default  reduce using rule 76 (expr_group)


state 128

   75 expr_group: ident TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE . expr_array_list

    TOKEN_BRACKET_OPEN  shift, and go to state 141

    $default  reduce using rule 79 (expr_array_list)

    expr_array_list  go to state 142


state 129

   18 not_empty_param_list: param TOKEN_COMMA not_empty_param_list .

    $default  reduce using rule 18 (not_empty_param_list)


state 130

   19 param: ident TOKEN_COLON type .

    $default  reduce using rule 19 (param)


state 131

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt . TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt . TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_SEMICOLON  shift, and go to state 143


state 132

   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN expr . TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_matched
   31 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr . TOKEN_PAREN_CLOSE stmt
   32               | TOKEN_IF TOKEN_PAREN_OPEN expr . TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_unmatched

    TOKEN_PAREN_CLOSE  shift, and go to state 144


state 133

   29 stmt_matched: TOKEN_PRINT expr_list TOKEN_SEMICOLON .

    $default  reduce using rule 29 (stmt_matched)


state 134

   28 stmt_matched: TOKEN_RETURN expr_opt TOKEN_SEMICOLON .

    $default  reduce using rule 28 (stmt_matched)


state 135

   23 stmt_block: TOKEN_BRACE_OPEN stmt_list TOKEN_BRACE_CLOSE .

    $default  reduce using rule 23 (stmt_block)


state 136

   41 expr_block: TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE .

    $default  reduce using rule 41 (expr_block)


state 137

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_BRACE_OPEN not_empty_expr_list_block TOKEN_BRACE_CLOSE TOKEN_SEMICOLON .

    $default  reduce using rule 7 (decl)


state 138

   41 expr_block: TOKEN_BRACE_OPEN . not_empty_expr_list_block TOKEN_BRACE_CLOSE

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 138
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident                      go to state 29
    not_empty_expr_list        go to state 84
    not_empty_expr_list_block  go to state 118
    expr_block                 go to state 86
    expr                       go to state 92
    expr_or                    go to state 32
    expr_and                   go to state 33
    expr_cmp                   go to state 34
    expr_add                   go to state 35
    expr_mult                  go to state 36
    expr_exp                   go to state 37
    expr_unary                 go to state 38
    expr_incr                  go to state 39
    expr_group                 go to state 40
    expr_primary               go to state 41


state 139

   38 not_empty_expr_list_block: expr_block TOKEN_COMMA not_empty_expr_list_block .

    $default  reduce using rule 38 (not_empty_expr_list_block)


state 140

   36 not_empty_expr_list: expr TOKEN_COMMA not_empty_expr_list .

    $default  reduce using rule 36 (not_empty_expr_list)


state 141

   78 expr_array_list: TOKEN_BRACKET_OPEN . expr TOKEN_BRACKET_CLOSE expr_array_list

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    ident         go to state 29
    expr          go to state 145
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 142

   75 expr_group: ident TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list .

    $default  reduce using rule 75 (expr_group)


state 143

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON . expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON . expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 44 (expr_opt)

    ident         go to state 29
    expr_opt      go to state 146
    expr          go to state 31
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 144

   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE . stmt_matched TOKEN_ELSE stmt_matched
   31 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE . stmt
   32               | TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE . stmt_matched TOKEN_ELSE stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 119
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    decl            go to state 77
    ident           go to state 78
    stmt            go to state 147
    stmt_block      go to state 80
    stmt_matched    go to state 148
    stmt_unmatched  go to state 82
    expr            go to state 121
    expr_or         go to state 32
    expr_and        go to state 33
    expr_cmp        go to state 34
    expr_add        go to state 35
    expr_mult       go to state 36
    expr_exp        go to state 37
    expr_unary      go to state 38
    expr_incr       go to state 39
    expr_group      go to state 40
    expr_primary    go to state 41


state 145

   78 expr_array_list: TOKEN_BRACKET_OPEN expr . TOKEN_BRACKET_CLOSE expr_array_list

    TOKEN_BRACKET_CLOSE  shift, and go to state 149


state 146

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt . TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt . TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_SEMICOLON  shift, and go to state 150


state 147

   31 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt .

    $default  reduce using rule 31 (stmt_unmatched)


state 148

   21 stmt: stmt_matched .
   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched . TOKEN_ELSE stmt_matched
   32 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched . TOKEN_ELSE stmt_unmatched

    TOKEN_ELSE  shift, and go to state 151

    $default  reduce using rule 21 (stmt)


state 149

   78 expr_array_list: TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE . expr_array_list

    TOKEN_BRACKET_OPEN  shift, and go to state 141

    $default  reduce using rule 79 (expr_array_list)

    expr_array_list  go to state 152


state 150

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON . expr_opt TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON . expr_opt TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    $default  reduce using rule 44 (expr_opt)

    ident         go to state 29
    expr_opt      go to state 153
    expr          go to state 31
    expr_or       go to state 32
    expr_and      go to state 33
    expr_cmp      go to state 34
    expr_add      go to state 35
    expr_mult     go to state 36
    expr_exp      go to state 37
    expr_unary    go to state 38
    expr_incr     go to state 39
    expr_group    go to state 40
    expr_primary  go to state 41


state 151

   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE . stmt_matched
   32 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE . stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 119
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    decl            go to state 77
    ident           go to state 78
    stmt_block      go to state 80
    stmt_matched    go to state 154
    stmt_unmatched  go to state 155
    expr            go to state 121
    expr_or         go to state 32
    expr_and        go to state 33
    expr_cmp        go to state 34
    expr_add        go to state 35
    expr_mult       go to state 36
    expr_exp        go to state 37
    expr_unary      go to state 38
    expr_incr       go to state 39
    expr_group      go to state 40
    expr_primary    go to state 41


state 152

   78 expr_array_list: TOKEN_BRACKET_OPEN expr TOKEN_BRACKET_CLOSE expr_array_list .

    $default  reduce using rule 78 (expr_array_list)


state 153

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt . TOKEN_PAREN_CLOSE stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt . TOKEN_PAREN_CLOSE stmt_unmatched

    TOKEN_PAREN_CLOSE  shift, and go to state 156


state 154

   30 stmt_matched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_matched .

    $default  reduce using rule 30 (stmt_matched)


state 155

   32 stmt_unmatched: TOKEN_IF TOKEN_PAREN_OPEN expr TOKEN_PAREN_CLOSE stmt_matched TOKEN_ELSE stmt_unmatched .

    $default  reduce using rule 32 (stmt_unmatched)


state 156

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE . stmt_matched
   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE . stmt_unmatched

    TOKEN_CHAR_LITERAL    shift, and go to state 21
    TOKEN_FALSE           shift, and go to state 22
    TOKEN_FOR             shift, and go to state 72
    TOKEN_IF              shift, and go to state 73
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_INT_LITERAL     shift, and go to state 23
    TOKEN_PRINT           shift, and go to state 74
    TOKEN_RETURN          shift, and go to state 75
    TOKEN_STRING_LITERAL  shift, and go to state 24
    TOKEN_TRUE            shift, and go to state 25
    TOKEN_PAREN_OPEN      shift, and go to state 26
    TOKEN_BRACE_OPEN      shift, and go to state 119
    TOKEN_NEGATION        shift, and go to state 27
    TOKEN_SUBTRACT        shift, and go to state 28

    decl            go to state 77
    ident           go to state 78
    stmt_block      go to state 80
    stmt_matched    go to state 157
    stmt_unmatched  go to state 158
    expr            go to state 121
    expr_or         go to state 32
    expr_and        go to state 33
    expr_cmp        go to state 34
    expr_add        go to state 35
    expr_mult       go to state 36
    expr_exp        go to state 37
    expr_unary      go to state 38
    expr_incr       go to state 39
    expr_group      go to state 40
    expr_primary    go to state 41


state 157

   26 stmt_matched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_matched .

    $default  reduce using rule 26 (stmt_matched)


state 158

   33 stmt_unmatched: TOKEN_FOR TOKEN_PAREN_OPEN expr_opt TOKEN_SEMICOLON expr_opt TOKEN_SEMICOLON expr_opt TOKEN_PAREN_CLOSE stmt_unmatched .

    $default  reduce using rule 33 (stmt_unmatched)
